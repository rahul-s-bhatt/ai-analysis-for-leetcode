apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: leetcode-analysis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6.2-alpine
        command:
          - redis-server
          - "/redis-master/redis.conf"
        ports:
        - containerPort: 6379
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "200m"
            memory: "512Mi"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /data
          name: redis-data
        - mountPath: /redis-master
          name: config
      securityContext:
        fsGroup: 1000
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data
      - name: config
        configMap:
          name: redis-config
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: leetcode-analysis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: leetcode-analysis
data:
  redis.conf: |
    maxmemory 512mb
    maxmemory-policy allkeys-lru
    appendonly yes
    protected-mode yes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data
  namespace: leetcode-analysis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi